<!DOCTYPE html>
<html>

  <head>
    <title>Test chuyển tiền</title>
    <script src="https://cdn.jsdelivr.net/npm/web3@4.8.0/dist/web3.min.js"></script>
  </head>

  <body>
    <button id="connect-btn">Connect to Metamask</button>
    <div id="account">Account not connected</div>
    <input type="text" id="amount" placeholder="Amount" />
    <button id="transfer-btn" disabled>Buy DHC</button>
    <div id="balance"></div>
    <div id="balance-affiliate"></div>
    <input type="text" id="amount-withdraw" placeholder="Amount to withdraw">
    <input type="radio" name="source" id="dhc" value="dhc">
    <input type="radio" name="source" id="affiliate" value="affiliate">
    <button id="withdraw-btn" disabled>Withdraw</button>
    <div id="error"></div>

    <script>
      const connectButton = document.getElementById("connect-btn");
      const accountDiv = document.getElementById("account");
      const transferButton = document.getElementById("transfer-btn");
      const withdrawButton = document.getElementById("withdraw-btn");
      const errorDiv = document.getElementById("error");

      let web3;
      let accounts;
      let contract;

      const contractABI = [{
        constant: true,
        inputs: [{ name: "_owner", type: "address" }],
        name: "balanceOf",
        outputs: [{ name: "balance", type: "uint256" }],
        type: "function",
      },
      {
        constant: true,
        inputs: [],
        name: "decimals",
        outputs: [{ name: "", type: "uint8" }],
        type: "function",
      },
      {
        constant: false,
        inputs: [
          { name: "_to", type: "address" },
          { name: "_value", type: "uint256" },
        ],
        name: "transfer",
        outputs: [{ name: "", type: "bool" }],
        type: "function",
      },
      ];
      const contractAddress = "0x55d398326f99059fF775485246999027B3197955";

      connectButton.addEventListener("click", async () => {
        if (typeof window.ethereum !== "undefined") {
          web3 = new Web3(window.ethereum);
          try {
            accounts = await ethereum.request({
              method: "eth_requestAccounts",
            });
            accountDiv.textContent = accounts[0];
            await login(accounts[0]);
            contract = new web3.eth.Contract(contractABI, contractAddress);
            transferButton.disabled = false;
            withdrawButton.disabled = false;
          } catch (error) {
            errorDiv.textContent = "Lỗi khi kết nối với ví: " + error.message;
          }
        } else {
          errorDiv.textContent = "MetaMask chưa được cài đặt.";
        }
      });

      transferButton.addEventListener("click", async () => {
        const amountNumber = Number(document.getElementById("amount").value);
        // Người nhận(admin)
        const recipient = "0xBE69f16DC0e9ce539f3515Fb0baEE7Fc9250c7B6";
        const amount = web3.utils.toWei(`${amountNumber}`, "ether");
        try {
          await contract.methods
            .transfer(recipient, amount)
            .send({ from: accounts[0] });
          errorDiv.textContent = "Giao dịch thành công!"
        } catch (error) {
          if (error.message.includes("User denied transaction signature.")) {
            errorDiv.textContent = "Người dùng nhấn hủy giao dịch.";
          } else {
            errorDiv.textContent = "Lỗi khi gửi USDT: " + error.message;
          }
        }
      });

      withdrawButton.addEventListener("click", async () => {
        const amountWithdraw = Number(document.getElementById("amount-withdraw").value);
        const source = document.querySelector('input[name="source"]:checked').value;
        try {
          await fetch('/withdraw', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              user_id: accounts[0],
              amount: amountWithdraw,
              source: source
            })
          })
          errorDiv.textContent = "Yêu cầu rút tiền đã được gửi!";
        } catch (error) {
          console.error('Error:', error);
          errorDiv.textContent = "Lỗi khi gửi yêu cầu rút tiền: " + error.message;
        }
      });

      async function login(user_id) {
        await fetch('/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ user_id })
        })
          .then(response => response.json())
          .then(data => {
            console.log('Success:', data);
          })
          .catch((error) => {
            console.error('Error:', error);
          });
      }
    </script>
  </body>

</html>